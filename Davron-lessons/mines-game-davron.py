# GAME
# *―----------------------------------------------------------
# !---------------------------MINES---------------------------
# *-----------------------------------------------------------
# !╔═══════╦═══════╦═══════╦═══════╦═══════╦═══════╗
# !║       ║   1   ║   2   ║   3   ║   4   ║   5   ║
# !╠═══════╬═══════╬═══════╬═══════╬═══════╬═══════╣
# !║   A   ║   x   ║   x   ║   x   ║   x   ║   x   ║
# !╠═══════╬═══════╬═══════╬═══════╬═══════╬═══════╣
# !║   B   ║   x   ║   x   ║   x   ║   x   ║   x   ║
# !╠═══════╬═══════╬═══════╬═══════╬═══════╬═══════╣
# !║   C   ║   x   ║   x   ║   x   ║   x   ║   x   ║
# !╠═══════╬═══════╬═══════╬═══════╬═══════╬═══════╣
# !║   D   ║   x   ║   x   ║   x   ║   x   ║   x   ║
# !╠═══════╬═══════╬═══════╬═══════╬═══════╬═══════╣
# !║   E   ║   x   ║   x   ║   x   ║   x   ║       ║
# !╚═══════╩═══════╩═══════╩═══════╩═══════╩═══════╝

def topRows(r):
    return f"╔═══════╦{("═══════╦" * (r - 1))}═══════╗\n" \
           f"║       {("║       " * (r - 1))}║       ║\n"


def middleRows(r):
    return f"╠═══════╬{("═══════╬" * (r - 1))}═══════╣\n" \
           f"║       {("║   x   " * (r - 1))}║   x   ║\n"


def bottomRows(r):
    return f"╠═══════╬{("═══════╬" * (r - 1))}═══════╣\n" \
           f"║       {("║   x   " * (r - 1))}║   x   ║\n" \
           f"╚═══════╩{("═══════╩" * (r - 1))}═══════╝\n"


def createTable(rows: int, col: int) -> None:
    if rows != 0 and col != 0:
        return topRows(rows) + (middleRows(rows) * (col-1)) + bottomRows(rows)
    else:
        return show_text("Please enter a valid number!!!!!!")

print(createTable(5,6))




# ==================================================================
# ==================================================================
# ==================================================================


def show_text(text: str) -> None:
    print("============================================")
    print(text)
    print("============================================")


def topRowsTwo(r):
    return f"╔═══════╦{("═══════╦" * (r - 2))}═══════╗\n" \
           f"║   x   {("║   x   " * (r - 2))}║   x   ║\n"


def middleRowsTwo(r):
    return f"╠═══════╬{("═══════╬" * (r - 2))}═══════╣\n" \
           f"║   x   {("║   x   " * (r - 2))}║   x   ║\n"


def bottomRowsTwo(r):
    return f"╠═══════╬{("═══════╬" * (r - 2))}═══════╣\n" \
           f"║   x   {("║   x   " * (r - 2))}║   x   ║\n" \
           f"╚═══════╩{("═══════╩" * (r - 2))}═══════╝\n"


def createTableTwo(rows: int, col: int):
    if rows != 0 and col != 0:
        return topRowsTwo(rows) + (middleRowsTwo(rows) * (col-2)) + bottomRowsTwo(rows)
    else:
        return show_text("Please enter a valid number!!!!!!")
          

# print(createTableTwo(5,5))
